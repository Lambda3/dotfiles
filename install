#!/usr/bin/env bash

set -euo pipefail

if [ "$EUID" == "0" ]; then
  echo "Please do not run as root"
  exit 2
fi

BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

ALL_ARGS=$@
CLEAN=false
UPDATE=false
NAME=''
EMAIL=''
SHOW_HELP=false
VERBOSE=false
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    --clean|-c)
    CLEAN=true
    shift
    ;;
    --update|-u)
    UPDATE=true
    shift
    ;;
    -n|--name)
    NAME="$2"
    shift
    shift
    ;;
    -e|--email)
    EMAIL="$2"
    shift
    shift
    ;;
    --help|-h)
    SHOW_HELP=true
    break
    ;;
    --verbose)
    VERBOSE=true
    shift
    ;;
    *)
    shift
    ;;
  esac
done

if $SHOW_HELP; then
  cat <<EOF
Post installer.

Usage:
  `readlink -f $0` [flags]

Flags:
  -n, --name               Name to use when configuring Git.
  -e, --email              Email to use when configuring Git.
  -c, --clean              Will clean installed packages.
  -u, --update             Will download and install/reinstall even if the tools are already installed
      --verbose            Show verbose output
  -h, --help               This help
EOF
  exit 0
fi

if $VERBOSE; then
  echo Running `basename "$0"` $ALL_ARGS
  echo Update is $UPDATE
fi

if [ "$NAME" == "" ]; then
  if ! hash git 2>/dev/null || [[ `git config --global user.name` == "" ]] || [[ `git config --global user.name` == "placeholder" ]]; then
    >&2 echo Name is required.
    exit 2
  fi
fi
if [ "$EMAIL" == "" ]; then
  if ! hash git 2>/dev/null || [[ `git config --global user.email` == "" ]] || [[ `git config --global user.email` == "placeholder@lambda3.com.br" ]]; then
    >&2 echo Email is required.
    exit 2
  fi
fi

pushd "${BASEDIR}" > /dev/null

export DEBIAN_FRONTEND=noninteractive
if grep [Mm]icrosoft /proc/version > /dev/null; then
  export WSL=true
else
  export WSL=false
fi
if grep docker /proc/1/cgroup -qa; then
  export RUNNING_IN_CONTAINER=true
else
  export RUNNING_IN_CONTAINER=false
fi
$BASEDIR/pre-install.sh $ALL_ARGS
$BASEDIR/install.sh
$BASEDIR/post-install.sh $ALL_ARGS

popd > /dev/null

echo Done.
